// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { companiesId, type CompaniesId } from "./Companies";
import { usersId, type UsersId } from "./Users";
import { z } from "zod";

/** Identifier type for public.companies_users */
export type CompaniesUsersId = string & { __brand: "CompaniesUsersId" };

/** Represents the table public.companies_users */
export default interface CompaniesUsers {
  id: CompaniesUsersId;

  createdAt: Date;

  updatedAt: Date;

  deletedAt: Date | null;

  companyId: CompaniesId;

  userId: UsersId;
}

/** Represents the initializer for the table public.companies_users */
export interface CompaniesUsersInitializer {
  /** Default value: gen_random_uuid() */
  id?: CompaniesUsersId;

  /** Default value: CURRENT_TIMESTAMP */
  createdAt?: Date;

  /** Default value: CURRENT_TIMESTAMP */
  updatedAt?: Date;

  deletedAt?: Date | null;

  companyId: CompaniesId;

  userId: UsersId;
}

/** Represents the mutator for the table public.companies_users */
export interface CompaniesUsersMutator {
  id?: CompaniesUsersId;

  createdAt?: Date;

  updatedAt?: Date;

  deletedAt?: Date | null;

  companyId?: CompaniesId;

  userId?: UsersId;
}

export const companiesUsersId = z.string() as unknown as z.Schema<CompaniesUsersId>;

export const companiesUsers = z.object({
  id: companiesUsersId,
  createdAt: z.date(),
  updatedAt: z.date(),
  deletedAt: z.date().nullable(),
  companyId: companiesId,
  userId: usersId,
}) as unknown as z.Schema<CompaniesUsers>;

export const companiesUsersInitializer = z.object({
  id: companiesUsersId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  companyId: companiesId,
  userId: usersId,
}) as unknown as z.Schema<CompaniesUsersInitializer>;

export const companiesUsersMutator = z.object({
  id: companiesUsersId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  companyId: companiesId.optional(),
  userId: usersId.optional(),
}) as unknown as z.Schema<CompaniesUsersMutator>;
