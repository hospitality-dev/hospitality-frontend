// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { usersId, type UsersId } from "./Users";
import { z } from "zod";

/** Identifier type for public.images */
export type ImagesId = string & { __brand: "ImagesId" };

/** Represents the table public.images */
export default interface Images {
  id: ImagesId;

  title: string;

  createdAt: Date;

  updatedAt: Date;

  deletedAt: Date | null;

  ownerId: UsersId;
}

/** Represents the initializer for the table public.images */
export interface ImagesInitializer {
  /** Default value: gen_random_uuid() */
  id?: ImagesId;

  title: string;

  /** Default value: CURRENT_TIMESTAMP */
  createdAt?: Date;

  /** Default value: CURRENT_TIMESTAMP */
  updatedAt?: Date;

  deletedAt?: Date | null;

  ownerId: UsersId;
}

/** Represents the mutator for the table public.images */
export interface ImagesMutator {
  id?: ImagesId;

  title?: string;

  createdAt?: Date;

  updatedAt?: Date;

  deletedAt?: Date | null;

  ownerId?: UsersId;
}

export const imagesId = z.string() as unknown as z.Schema<ImagesId>;

export const images = z.object({
  id: imagesId,
  title: z.string(),
  createdAt: z.date(),
  updatedAt: z.date(),
  deletedAt: z.date().nullable(),
  ownerId: usersId,
}) as unknown as z.Schema<Images>;

export const imagesInitializer = z.object({
  id: imagesId.optional(),
  title: z.string(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  ownerId: usersId,
}) as unknown as z.Schema<ImagesInitializer>;

export const imagesMutator = z.object({
  id: imagesId.optional(),
  title: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  ownerId: usersId.optional(),
}) as unknown as z.Schema<ImagesMutator>;
