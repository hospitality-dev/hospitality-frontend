// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";

import { type ImagesId, imagesId } from "./Images";
import { type UsersId, usersId } from "./Users";

/** Identifier type for public.companies */
export type CompaniesId = string & { __brand: "CompaniesId" };

/** Represents the table public.companies */
export default interface Companies {
  id: CompaniesId;

  createdAt: Date;

  updatedAt: Date;

  deletedAt: Date | null;

  title: string;

  ownerId: UsersId;

  address: string;

  phone: string;

  email: string;

  dateOfFounding: Date | null;

  cin: string | null;

  imageId: ImagesId | null;
}

/** Represents the initializer for the table public.companies */
export interface CompaniesInitializer {
  /** Default value: gen_random_uuid() */
  id?: CompaniesId;

  /** Default value: CURRENT_TIMESTAMP */
  createdAt?: Date;

  /** Default value: CURRENT_TIMESTAMP */
  updatedAt?: Date;

  deletedAt?: Date | null;

  title: string;

  ownerId: UsersId;

  address: string;

  phone: string;

  email: string;

  dateOfFounding?: Date | null;

  cin?: string | null;

  imageId?: ImagesId | null;
}

/** Represents the mutator for the table public.companies */
export interface CompaniesMutator {
  id?: CompaniesId;

  createdAt?: Date;

  updatedAt?: Date;

  deletedAt?: Date | null;

  title?: string;

  ownerId?: UsersId;

  address?: string;

  phone?: string;

  email?: string;

  dateOfFounding?: Date | null;

  cin?: string | null;

  imageId?: ImagesId | null;
}

export const companiesId = z.string() as unknown as z.Schema<CompaniesId>;

export const companies = z.object({
  id: companiesId,
  createdAt: z.date(),
  updatedAt: z.date(),
  deletedAt: z.date().nullable(),
  title: z.string(),
  ownerId: usersId,
  address: z.string(),
  phone: z.string(),
  email: z.string(),
  dateOfFounding: z.date().nullable(),
  cin: z.string().nullable(),
  imageId: imagesId.nullable(),
}) as unknown as z.Schema<Companies>;

export const companiesInitializer = z.object({
  id: companiesId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  title: z.string(),
  ownerId: usersId,
  address: z.string(),
  phone: z.string(),
  email: z.string(),
  dateOfFounding: z.date().optional().nullable(),
  cin: z.string().optional().nullable(),
  imageId: imagesId.optional().nullable(),
}) as unknown as z.Schema<CompaniesInitializer>;

export const companiesMutator = z.object({
  id: companiesId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  title: z.string().optional(),
  ownerId: usersId.optional(),
  address: z.string().optional(),
  phone: z.string().optional(),
  email: z.string().optional(),
  dateOfFounding: z.date().optional().nullable(),
  cin: z.string().optional().nullable(),
  imageId: imagesId.optional().nullable(),
}) as unknown as z.Schema<CompaniesMutator>;
