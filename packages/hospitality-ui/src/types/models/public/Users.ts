// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { imagesId, type ImagesId } from "./Images";
import { z } from "zod";

/** Identifier type for public.users */
export type UsersId = string & { __brand: "UsersId" };

/** Represents the table public.users */
export default interface Users {
  id: UsersId;

  createdAt: Date;

  updatedAt: Date;

  deletedAt: Date | null;

  firstName: string;

  lastName: string;

  username: string;

  email: string | null;

  phone: string | null;

  dateOfBirth: Date | null;

  dateOfEmployment: Date | null;

  dateOfTermination: Date | null;

  imageId: ImagesId | null;
}

/** Represents the initializer for the table public.users */
export interface UsersInitializer {
  /** Default value: gen_random_uuid() */
  id?: UsersId;

  /** Default value: CURRENT_TIMESTAMP */
  createdAt?: Date;

  /** Default value: CURRENT_TIMESTAMP */
  updatedAt?: Date;

  deletedAt?: Date | null;

  firstName: string;

  lastName: string;

  username: string;

  email?: string | null;

  phone?: string | null;

  dateOfBirth?: Date | null;

  dateOfEmployment?: Date | null;

  dateOfTermination?: Date | null;

  imageId?: ImagesId | null;
}

/** Represents the mutator for the table public.users */
export interface UsersMutator {
  id?: UsersId;

  createdAt?: Date;

  updatedAt?: Date;

  deletedAt?: Date | null;

  firstName?: string;

  lastName?: string;

  username?: string;

  email?: string | null;

  phone?: string | null;

  dateOfBirth?: Date | null;

  dateOfEmployment?: Date | null;

  dateOfTermination?: Date | null;

  imageId?: ImagesId | null;
}

export const usersId = z.string() as unknown as z.Schema<UsersId>;

export const users = z.object({
  id: usersId,
  createdAt: z.date(),
  updatedAt: z.date(),
  deletedAt: z.date().nullable(),
  firstName: z.string(),
  lastName: z.string(),
  username: z.string(),
  email: z.string().nullable(),
  phone: z.string().nullable(),
  dateOfBirth: z.date().nullable(),
  dateOfEmployment: z.date().nullable(),
  dateOfTermination: z.date().nullable(),
  imageId: imagesId.nullable(),
}) as unknown as z.Schema<Users>;

export const usersInitializer = z.object({
  id: usersId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  firstName: z.string(),
  lastName: z.string(),
  username: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  dateOfBirth: z.date().optional().nullable(),
  dateOfEmployment: z.date().optional().nullable(),
  dateOfTermination: z.date().optional().nullable(),
  imageId: imagesId.optional().nullable(),
}) as unknown as z.Schema<UsersInitializer>;

export const usersMutator = z.object({
  id: usersId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
  firstName: z.string().optional(),
  lastName: z.string().optional(),
  username: z.string().optional(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  dateOfBirth: z.date().optional().nullable(),
  dateOfEmployment: z.date().optional().nullable(),
  dateOfTermination: z.date().optional().nullable(),
  imageId: imagesId.optional().nullable(),
}) as unknown as z.Schema<UsersMutator>;
