// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";

import { type CompaniesId, companiesId } from "./Companies";
import { type LocationsId, locationsId } from "./Locations";

/** Identifier type for public.companies_locations */
export type CompaniesLocationsId = string & { __brand: "CompaniesLocationsId" };

/** Represents the table public.companies_locations */
export default interface CompaniesLocations {
  id: CompaniesLocationsId;

  companyId: CompaniesId;

  locationId: LocationsId;

  createdAt: Date;

  updatedAt: Date;

  deletedAt: Date | null;
}

/** Represents the initializer for the table public.companies_locations */
export interface CompaniesLocationsInitializer {
  /** Default value: gen_random_uuid() */
  id?: CompaniesLocationsId;

  companyId: CompaniesId;

  locationId: LocationsId;

  /** Default value: CURRENT_TIMESTAMP */
  createdAt?: Date;

  /** Default value: CURRENT_TIMESTAMP */
  updatedAt?: Date;

  deletedAt?: Date | null;
}

/** Represents the mutator for the table public.companies_locations */
export interface CompaniesLocationsMutator {
  id?: CompaniesLocationsId;

  companyId?: CompaniesId;

  locationId?: LocationsId;

  createdAt?: Date;

  updatedAt?: Date;

  deletedAt?: Date | null;
}

export const companiesLocationsId = z.string() as unknown as z.Schema<CompaniesLocationsId>;

export const companiesLocations = z.object({
  id: companiesLocationsId,
  companyId: companiesId,
  locationId: locationsId,
  createdAt: z.date(),
  updatedAt: z.date(),
  deletedAt: z.date().nullable(),
}) as unknown as z.Schema<CompaniesLocations>;

export const companiesLocationsInitializer = z.object({
  id: companiesLocationsId.optional(),
  companyId: companiesId,
  locationId: locationsId,
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
}) as unknown as z.Schema<CompaniesLocationsInitializer>;

export const companiesLocationsMutator = z.object({
  id: companiesLocationsId.optional(),
  companyId: companiesId.optional(),
  locationId: locationsId.optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
  deletedAt: z.date().optional().nullable(),
}) as unknown as z.Schema<CompaniesLocationsMutator>;
